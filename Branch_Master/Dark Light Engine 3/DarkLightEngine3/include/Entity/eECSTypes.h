#ifndef _eComponentTypes_HG_
#define _eComponentTypes_HG_

#include <string>


enum eECSTypes
{
	ERROR_COMPONENT = -1,
	ENTITY,
	LOCATION_COMPONENT,
	MESH_COMPONENT,
	SKINNED_MESH_COMPONENT,
	ANIMATION_COMPONENT,
	CAMERA_COMPONENT,
	LIGHT_COMPONENT,
	AUDIO_COMPONENT,
	RIGIDBODY_COMPONENT,
	SOFTBODY_COMPONENT,
	COMPOUNDBODY_COMPONENT,
	TDPERSONCONTROLLER_COMPONENT,
	FLIGHTCONTROLLER_COMPONENT,
	POINTS_COLLIDER_COMPONENT,
	SEEKBEHAVIOUR_COMPONENT,
	FLEEBEHAVIOUR_COMPONENT,
	PURSUEBEHAVIOUR_COMPONENT,
	EVADEBEHAVIOUR_COMPONENT,
	APPROACHBEHAVIOUR_COMPONENT,
	WANDERBEHAVIOUR_COMPONENT,
	IDLEBEHAVIOUR_COMPONENT,
	FLOCK_COMPONENT,
	ENEMY_COMPONENT,
	NEURALNETWORK_COMPONENT
};

// Convert enum to string
inline static std::string ToString(eECSTypes type)
{
	if (type == ERROR_COMPONENT) { return "ERROR_COMPONENT"; }
	else if (type == LOCATION_COMPONENT) { return "LOCATION_COMPONENT"; }
	else if (type == MESH_COMPONENT) { return "MESH_COMPONENT"; }
	else if (type == SKINNED_MESH_COMPONENT) { return "SKINNED_MESH_COMPONENT"; }
	else if (type == ANIMATION_COMPONENT) { return "ANIMATION_COMPONENT"; }
	else if (type == CAMERA_COMPONENT) { return "CAMERA_COMPONENT"; }
	else if (type == LIGHT_COMPONENT) { return "LIGHT_COMPONENT"; }
	else if (type == AUDIO_COMPONENT) { return "AUDIO_COMPONENT"; }
	else if (type == RIGIDBODY_COMPONENT) { return "RIGIDBODY_COMPONENT"; }
	else if (type == SOFTBODY_COMPONENT) { return "SOFTBODY_COMPONENT"; }
	else if (type == TDPERSONCONTROLLER_COMPONENT) { return "TDPERSONCONTROLLER_COMPONENT"; }
	else if (type == FLIGHTCONTROLLER_COMPONENT) { return "FLIGHTCONTROLLER_COMPONENT"; }
	else if (type == POINTS_COLLIDER_COMPONENT) { return "POINTS_COLLIDER_COMPONENT"; }
	else if (type == SEEKBEHAVIOUR_COMPONENT) { return "SEEKBEHAVIOUR_COMPONENT"; }
	else if (type == FLEEBEHAVIOUR_COMPONENT) { return "FLEEBEHAVIOUR_COMPONENT"; }
	else if (type == PURSUEBEHAVIOUR_COMPONENT) { return "PURSUEBEHAVIOUR_COMPONENT"; }
	else if (type == EVADEBEHAVIOUR_COMPONENT) { return "EVADEBEHAVIOUR_COMPONENT"; }
	else if (type == APPROACHBEHAVIOUR_COMPONENT) { return "APPROACHBEHAVIOUR_COMPONENT"; }
	else if (type == WANDERBEHAVIOUR_COMPONENT) { return "WANDERBEHAVIOUR_COMPONENT"; }
	else if (type == IDLEBEHAVIOUR_COMPONENT) { return "IDLEBEHAVIOUR_COMPONENT"; }
	else if (type == ENEMY_COMPONENT) { return "ENEMY_COMPONENT"; }
	else if (type == NEURALNETWORK_COMPONENT) { return "NEURALNETWORK_COMPONENT"; }
}

// Convert string to enum
inline static eECSTypes ToEnum(const std::string& type)
{
	if (type == "ERROR_COMPONENT") { return ERROR_COMPONENT; }
	else if (type == "LOCATION_COMPONENT") { return LOCATION_COMPONENT; }
	else if (type == "MESH_COMPONENT") { return MESH_COMPONENT; }
	else if (type == "SKINNED_MESH_COMPONENT") { return SKINNED_MESH_COMPONENT; }
	else if (type == "CAMERA_COMPONENT") { return CAMERA_COMPONENT; }
	else if (type == "LIGHT_COMPONENT") { return LIGHT_COMPONENT; }
	else if (type == "AUDIO_COMPONENT") { return AUDIO_COMPONENT; }
	else if (type == "RIGIDBODY_COMPONENT") { return RIGIDBODY_COMPONENT; }
	else if (type == "SOFTBODY_COMPONENT") { return SOFTBODY_COMPONENT; }
	else if (type == "TDPERSONCONTROLLER_COMPONENT") { return TDPERSONCONTROLLER_COMPONENT; }
	else if (type == "FLIGHTCONTROLLER_COMPONENT") { return FLIGHTCONTROLLER_COMPONENT; }
	else if (type == "POINTS_COLLIDER_COMPONENT") { return POINTS_COLLIDER_COMPONENT; }
	else if (type == "SEEKBEHAVIOUR_COMPONENT") { return SEEKBEHAVIOUR_COMPONENT; }
	else if (type == "FLEEBEHAVIOUR_COMPONENT") { return FLEEBEHAVIOUR_COMPONENT; }
	else if (type == "PURSUEBEHAVIOUR_COMPONENT") { return PURSUEBEHAVIOUR_COMPONENT; }
	else if (type == "EVADEBEHAVIOUR_COMPONENT") { return EVADEBEHAVIOUR_COMPONENT; }
	else if (type == "APPROACHBEHAVIOUR_COMPONENT") { return APPROACHBEHAVIOUR_COMPONENT; }
	else if (type == "WANDERBEHAVIOUR_COMPONENT") { return WANDERBEHAVIOUR_COMPONENT; }
	else if (type == "IDLEBEHAVIOUR_COMPONENT") { return IDLEBEHAVIOUR_COMPONENT; }
	else if (type == "ENEMY_COMPONENT") { return ENEMY_COMPONENT; }
	else if (type == "NEURALNETWORK_COMPONENT") { return NEURALNETWORK_COMPONENT; }
}


#endif // !_eComponentTypes_HG_

